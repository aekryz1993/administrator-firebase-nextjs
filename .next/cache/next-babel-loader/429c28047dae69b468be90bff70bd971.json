{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/aekryzprobook/Desktop/next.js/administrator/lib/db.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport * as Firebase from \"firebase/app\";\nimport Router from \"next/router\";\nimport cookie from 'js-cookie';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/functions';\nvar firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.FIREBASE_DATABASE_URL,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.FIREBASE_APP_ID,\n  measurementId: process.env.FIREBASE_MEASUREMENT_ID\n};\nexport var firebase = Firebase.apps.length ? Firebase.app() : Firebase.initializeApp(firebaseConfig);\nvar firestore = Firebase.firestore();\nvar auth = Firebase.auth();\nvar functions = Firebase.functions();\nvar database = firebase.database();\nvar authContext = createContext();\nexport function ProvideAuth(_ref) {\n  var children = _ref.children;\n  var auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, children);\n}\nexport var useAuth = function useAuth() {\n  return useContext(authContext);\n};\n\nfunction useProvideAuth() {\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var signin =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(email, password) {\n      var loginAsAdmin, snapshot;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              loginAsAdmin = functions.httpsCallable('loginAsAdmin');\n              _context2.next = 3;\n              return loginAsAdmin({\n                email: email\n              });\n\n            case 3:\n              snapshot = _context2.sent;\n              return _context2.abrupt(\"return\", new _Promise(\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(resolve, reject) {\n                  var response;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!snapshot.data) {\n                            _context.next = 15;\n                            break;\n                          }\n\n                          _context.prev = 1;\n                          _context.next = 4;\n                          return firebase.auth().signInWithEmailAndPassword(email, password);\n\n                        case 4:\n                          response = _context.sent;\n                          setUser(response.user);\n                          cookie.set('token', response.user.refreshToken);\n                          resolve('successful login');\n                          _context.next = 13;\n                          break;\n\n                        case 10:\n                          _context.prev = 10;\n                          _context.t0 = _context[\"catch\"](1);\n                          reject('failed login');\n\n                        case 13:\n                          _context.next = 16;\n                          break;\n\n                        case 15:\n                          reject('failed login');\n\n                        case 16:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 10]]);\n                }));\n\n                return function (_x3, _x4) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function signin(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signout = function signout() {\n    return firebase.auth().signOut().then(function () {\n      return cookie.remove('token');\n    }).then(function () {\n      return Router.push('/');\n    }).then(function () {\n      setUser(false);\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return {\n    firestore: firestore,\n    user: user,\n    signin: signin,\n    // signup,\n    signout: signout\n  };\n} // useProvideAuth.getInitialProps = async ({ req, res }) => {\n//   res.user = {}\n//   const userAgent = req ? console.log('auth.currentUser') : 'console.log(auth.currentUser)'\n//   return { userAgent }\n// }","map":{"version":3,"sources":["/home/aekryzprobook/Desktop/next.js/administrator/lib/db.js"],"names":["React","useState","useEffect","useContext","createContext","Firebase","Router","cookie","firebaseConfig","apiKey","process","env","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_APP_ID","measurementId","FIREBASE_MEASUREMENT_ID","firebase","apps","length","app","initializeApp","firestore","auth","functions","database","authContext","ProvideAuth","children","useProvideAuth","useAuth","user","setUser","signin","email","password","loginAsAdmin","httpsCallable","snapshot","resolve","reject","data","signInWithEmailAndPassword","response","set","refreshToken","signout","signOut","then","remove","push","unsubscribe","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport * as Firebase from \"firebase/app\";\nimport Router from \"next/router\";\nimport cookie from 'js-cookie'\nimport 'firebase/firestore'\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.FIREBASE_DATABASE_URL,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.FIREBASE_APP_ID,\n  measurementId: process.env.FIREBASE_MEASUREMENT_ID\n}\n\nexport const firebase = Firebase.apps.length\n  ? Firebase.app()\n  : Firebase.initializeApp(firebaseConfig)\n\nconst firestore = Firebase.firestore()\nconst auth = Firebase.auth()\nconst functions = Firebase.functions()\nconst database = firebase.database();\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const signin = async (email, password) => {\n\n    const loginAsAdmin = functions.httpsCallable('loginAsAdmin');\n\n    const snapshot = await loginAsAdmin({ email: email })\n\n    return new Promise(async (resolve, reject) => {\n      if (snapshot.data) {\n        try {\n          const response = await firebase.auth().signInWithEmailAndPassword(email, password)\n          setUser(response.user)\n          cookie.set('token', response.user.refreshToken)\n          resolve('successful login')\n        } catch (error) {\n          reject('failed login')\n        }\n      } else {\n        reject('failed login')\n      }\n    })\n    // loginAsAdmin({ email: email }).then(snapshot => {\n    //   if (snapshot.data.admin) {\n    //     return firebase\n    //       .auth()\n    //       .signInWithEmailAndPassword(email, password)\n    //       .then(response => {\n    //         setUser(response.user);\n    //         Router.push('/dashboard/profile')\n    //         cookie.set('token', response.user.refreshToken)\n    //       })\n    //       // .then(() => Router.push('/dashboard/profile'))\n    //       // .then(() => console.log('rrrrrrrr'))\n    //       // Router.push('/dashboard/profile')\n    //       .catch((error) => error.message)\n    //   } else {\n    //     return 'Somthing went wrong'\n    //   }\n    // })\n  };\n\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => cookie.remove('token'))\n      .then(() => Router.push('/'))\n      .then(() => {\n        setUser(false);\n      });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    firestore,\n    user,\n    signin,\n    // signup,\n    signout,\n  };\n}\n\n// useProvideAuth.getInitialProps = async ({ req, res }) => {\n//   res.user = {}\n//   const userAgent = req ? console.log('auth.currentUser') : 'console.log(auth.currentUser)'\n//   return { userAgent }\n// }\n"]},"metadata":{},"sourceType":"module"}