{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/aekryzprobook/Desktop/next.js/administrator/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useState, useEffect } from \"react\";\n// import Router from \"next/router\";\n// import nextCookie from 'next-cookies'\nimport { useAuth } from '../lib/db';\nimport { Loggedin } from \"../utils/auth\";\nimport Login from \"../components/Login\";\nimport Profile from \"../components/Profile\"; // import { Router } from \"next/router\";\n// const index = ({token}) => {\n//   const auth = useAuth();\n//   const [Loggedin, setLoggedin] = useState(false)\n//   useEffect(() => {\n//     if (auth.user) {\n//       setLoggedin(true)\n//       Router.replace('/', '/dashboard/profile')\n//     } else {\n//       setLoggedin(false)\n//       // Router.replace('/', '/login')\n//     }\n//   }, [Loggedin]);\n//   if (auth.user || token) {\n//     return (\n//       <Profile />\n//     )\n//   } else if (!auth.user || !token) {\n//     return (\n//       <Login />\n//     )\n//   }\n// }\n\nvar login = function login(_ref) {\n  var token = _ref.token;\n  var auth = useAuth(); // console.log(auth.user.refreshToken)\n\n  if (token && token === auth.user.refreshToken) {\n    return __jsx(Profile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nlogin.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Loggedin(ctx));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default login;","map":{"version":3,"sources":["/home/aekryzprobook/Desktop/next.js/administrator/pages/index.js"],"names":["useAuth","Loggedin","Login","Profile","login","token","auth","user","refreshToken","getInitialProps","ctx"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAEzB,MAAMC,IAAI,GAAGN,OAAO,EAApB,CAFyB,CAIzB;;AAEA,MAAGK,KAAK,IAAIA,KAAK,KAAKC,IAAI,CAACC,IAAL,CAAUC,YAAhC,EAA8C;AAC5C,WACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AACD,SAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAZD;;AAcAJ,KAAK,CAACK,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfT,QAAQ,CAACS,GAAD,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeN,KAAf","sourcesContent":["// import { useState, useEffect } from \"react\";\n// import Router from \"next/router\";\n// import nextCookie from 'next-cookies'\nimport { useAuth } from '../lib/db'\nimport { Loggedin } from \"../utils/auth\";\nimport Login from \"../components/Login\";\nimport Profile from \"../components/Profile\";\n// import { Router } from \"next/router\";\n\n// const index = ({token}) => {\n\n//   const auth = useAuth();\n\n//   const [Loggedin, setLoggedin] = useState(false)\n\n//   useEffect(() => {\n//     if (auth.user) {\n//       setLoggedin(true)\n//       Router.replace('/', '/dashboard/profile')\n//     } else {\n//       setLoggedin(false)\n//       // Router.replace('/', '/login')\n//     }\n//   }, [Loggedin]);\n\n//   if (auth.user || token) {\n//     return (\n//       <Profile />\n//     )\n//   } else if (!auth.user || !token) {\n//     return (\n//       <Login />\n//     )\n//   }\n// }\n\nconst login = ({token}) => {\n\n  const auth = useAuth()\n\n  // console.log(auth.user.refreshToken)\n\n  if(token && token === auth.user.refreshToken) {\n    return (\n      <Profile/>\n    )\n  }\n  return <Login/>\n}\n\nlogin.getInitialProps = async (ctx) => {\n  return Loggedin(ctx)\n}\n\nexport default login"]},"metadata":{},"sourceType":"module"}